



Network Working Group                                        A. Dulaunoy
Internet-Draft                                                     CIRCL
Intended status: Informational                               3 July 2025
Expires: 4 January 2026


                       D4 Encapsulation Protocol
                                draft-01

Abstract

   This document describes the D4 encapsulation protocol, a protocol for
   encapsulating various types of security data for transmission.  The
   protocol includes a header format, a set of defined data types, and a
   mechanism for extending the protocol with meta-types.

   This document describes the D4 encapsulation protocol, designed to be
   a lightweight solution for streaming the collection of various data
   types.  Its core design principles are to enable the creation of
   dedicated sensor networks with a minimal architecture, to support a
   wide variety of sensor types (software, hardware, or virtual) through
   a simple software stack, and to provide an all-in-one open-source
   solution with minimal dependencies.  The protocol also supports
   information sharing capabilities to interconnect different D4 sensor
   networks and includes a set of default configurations for common
   monitoring tasks like Passive DNS collection, network flow, packet
   capture and DDoS backscatter analysis.  This document details the
   protocol's header format, data types, and extension mechanisms.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 4 January 2026.






Dulaunoy                 Expires 4 January 2026                 [Page 1]

Internet-Draft          D4 Encapsulation Protocol              July 2025


Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.

Table of Contents

   1.  D4 Encapsulation Protocol . . . . . . . . . . . . . . . . . .   2
     1.1.  Introduction  . . . . . . . . . . . . . . . . . . . . . .   2
     1.2.  Conventions and Terminology . . . . . . . . . . . . . . .   2
     1.3.  D4 Packet Header  . . . . . . . . . . . . . . . . . . . .   2
     1.4.  D4 Packet Types . . . . . . . . . . . . . . . . . . . . .   3
     1.5.  Meta Header . . . . . . . . . . . . . . . . . . . . . . .   4
       1.5.1.  Meta Header Fields  . . . . . . . . . . . . . . . . .   4
       1.5.2.  Meta Types  . . . . . . . . . . . . . . . . . . . . .   5
     1.6.  Security Considerations . . . . . . . . . . . . . . . . .   5
     1.7.  IANA Considerations . . . . . . . . . . . . . . . . . . .   5
     1.8.  References  . . . . . . . . . . . . . . . . . . . . . . .   6
   2.  Normative References  . . . . . . . . . . . . . . . . . . . .   6
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   6

1.  D4 Encapsulation Protocol

1.1.  Introduction

   This document specifies the D4 encapsulation protocol.  The protocol
   is designed to be a flexible and extensible way to transport
   different kinds of security-related data, such as network captures,
   log files, and sensor telemetry.

1.2.  Conventions and Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

1.3.  D4 Packet Header

   The D4 packet header is a fixed-size header that precedes the
   encapsulated data.





Dulaunoy                 Expires 4 January 2026                 [Page 2]

Internet-Draft          D4 Encapsulation Protocol              July 2025


    +===========+==========+==========================================+
    | Name      | bit size |               Description                |
    +===========+==========+==========================================+
    | version   | uint 8   |          Version of the header           |
    +-----------+----------+------------------------------------------+
    | type      | uint 8   |          Data encapsulated type          |
    +-----------+----------+------------------------------------------+
    | uuid      | uint 128 |               Sensor UUID                |
    +-----------+----------+------------------------------------------+
    | timestamp | uint 64  |            Encapsulation time            |
    +-----------+----------+------------------------------------------+
    | hmac      | uint 256 | Authentication header (HMAC-SHA-256-128) |
    +-----------+----------+------------------------------------------+
    | size      | uint 32  |               Payload size               |
    +-----------+----------+------------------------------------------+

                                  Table 1

1.4.  D4 Packet Types

   The type field in the D4 header indicates the format of the
   encapsulated data.  The following types are defined:





























Dulaunoy                 Expires 4 January 2026                 [Page 3]

Internet-Draft          D4 Encapsulation Protocol              July 2025


       +======+====================================================+
       | Type | Description                                        |
       +======+====================================================+
       | 0    | Reserved                                           |
       +------+----------------------------------------------------+
       | 1    | pcap (libpcap 2.4)                                 |
       +------+----------------------------------------------------+
       | 2    | meta header (JSON)                                 |
       +------+----------------------------------------------------+
       | 3    | generic log line                                   |
       +------+----------------------------------------------------+
       | 4    | dnscap (https://github.com/DNS-OARC/dnscap) output |
       +------+----------------------------------------------------+
       | 5    | pcapng (diagnostic)                                |
       +------+----------------------------------------------------+
       | 6    | generic NDJSON or JSON Lines                       |
       +------+----------------------------------------------------+
       | 7    | YAF (https://tools.netsa.cert.org/yaf/index.html)  |
       |      | (Yet Another Flowmeter)                            |
       +------+----------------------------------------------------+
       | 8    | passivedns (https://github.com/gamelinux/          |
       |      | passivedns) CSV stream                             |
       +------+----------------------------------------------------+
       | 254  | type defined by meta header (type 2)               |
       +------+----------------------------------------------------+

                                  Table 2

   A full list of D4 types is available in JSON format at
   https://raw.githubusercontent.com/D4-
   project/architecture/master/format/type.json
   (https://raw.githubusercontent.com/D4-
   project/architecture/master/format/type.json).

1.5.  Meta Header

   The meta header provides a mechanism to extend the D4 protocol with
   new data types.  When a new session is initiated, a packet with type
   2 (meta header) MUST be sent to the D4 server to describe how to
   decode subsequent packets.  The payload of the meta header is a
   single JSON object.

1.5.1.  Meta Header Fields

   The JSON object in the meta header payload MUST contain a type field.

   Here is an example of a meta header JSON object:




Dulaunoy                 Expires 4 January 2026                 [Page 4]

Internet-Draft          D4 Encapsulation Protocol              July 2025


   {
     "type": "ja3-jl",
     "encoding": "utf-8",
     "tags": [
       "tlp:white"
     ],
     "misp:org": "5b642239-4db4-4580-adf4-4ebd950d210f"
   }

1.5.2.  Meta Types

   The following meta-types are defined:

         +==============+========================================+
         | Type         | Description                            |
         +==============+========================================+
         | ja3-jl       | JA3 fingerprinting JL version          |
         +--------------+----------------------------------------+
         | d4-telemetry | D4 project sensor telemetry            |
         +--------------+----------------------------------------+
         | fascia       | fascia JSON object                     |
         +--------------+----------------------------------------+
         | maltrail     | maltrail (https://github.com/stamparm/ |
         |              | maltrail) logging                      |
         +--------------+----------------------------------------+

                                  Table 3

   A full list of D4 meta-types is available in JSON format at
   https://raw.githubusercontent.com/D4-
   project/architecture/master/format/meta-type.json
   (https://raw.githubusercontent.com/D4-
   project/architecture/master/format/meta-type.json).

1.6.  Security Considerations

   The D4 protocol includes an hmac field in the header for
   authentication.  Implementers should ensure that strong keys are used
   and that the HMAC verification is performed correctly to prevent
   spoofing and data tampering.

1.7.  IANA Considerations

   This document does not require any IANA actions.







Dulaunoy                 Expires 4 January 2026                 [Page 5]

Internet-Draft          D4 Encapsulation Protocol              July 2025


1.8.  References

2.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

Author's Address

   Alexandre Dulaunoy
   Computer Incident Response Center Luxembourg
   122, rue Adolphe Fischer
   L-L-1521 Luxembourg
   Luxembourg
   Phone: +352 247 88444
   Email: alexandre.dulaunoy@circl.lu

































Dulaunoy                 Expires 4 January 2026                 [Page 6]
